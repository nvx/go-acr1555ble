// Code generated by "stringer -output=stringer.go -type=ccidMessageType,SlotError,ICCStatus,ClockStatus,ErrorCode,PowerSelect"; DO NOT EDIT.

package acr1555ble

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[commandSetParameters-97]
	_ = x[commandICCPowerOn-98]
	_ = x[commandICCPowerOff-99]
	_ = x[commandGetSlotStatus-101]
	_ = x[commandXfrBlock-111]
	_ = x[commandEscape-107]
	_ = x[responseError-83]
	_ = x[responseDataBlock-128]
	_ = x[responseSlotStatus-129]
	_ = x[responseParameters-130]
	_ = x[responseEscape-131]
}

const (
	_ccidMessageType_name_0 = "responseError"
	_ccidMessageType_name_1 = "commandSetParameterscommandICCPowerOncommandICCPowerOff"
	_ccidMessageType_name_2 = "commandGetSlotStatus"
	_ccidMessageType_name_3 = "commandEscape"
	_ccidMessageType_name_4 = "commandXfrBlock"
	_ccidMessageType_name_5 = "responseDataBlockresponseSlotStatusresponseParametersresponseEscape"
)

var (
	_ccidMessageType_index_1 = [...]uint8{0, 20, 37, 55}
	_ccidMessageType_index_5 = [...]uint8{0, 17, 35, 53, 67}
)

func (i ccidMessageType) String() string {
	switch {
	case i == 83:
		return _ccidMessageType_name_0
	case 97 <= i && i <= 99:
		i -= 97
		return _ccidMessageType_name_1[_ccidMessageType_index_1[i]:_ccidMessageType_index_1[i+1]]
	case i == 101:
		return _ccidMessageType_name_2
	case i == 107:
		return _ccidMessageType_name_3
	case i == 111:
		return _ccidMessageType_name_4
	case 128 <= i && i <= 131:
		i -= 128
		return _ccidMessageType_name_5[_ccidMessageType_index_5[i]:_ccidMessageType_index_5[i+1]]
	default:
		return "ccidMessageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SlotErrorCommandAborted-255]
	_ = x[SlotErrorTimeout-254]
	_ = x[SlotErrorParity-253]
	_ = x[SlotErrorOverrun-252]
	_ = x[SlotErrorHardware-251]
	_ = x[SlotErrorBadATRTS-248]
	_ = x[SlotErrorBadATRTCK-247]
	_ = x[SlotErrorProtocolNotSupported-246]
	_ = x[SlotErrorClassNotSupported-245]
	_ = x[SlotErrorProcedureByteConflict-244]
	_ = x[SlotErrorDeactivatedProtocol-243]
	_ = x[SlotErrorBusyWithAutoSequence-242]
	_ = x[SlotErrorSlotBusy-224]
	_ = x[SlotErrorInvalidNAD-16]
	_ = x[SlotErrorInvalidIFSC-15]
	_ = x[SlotErrorInvalidClockStop-14]
	_ = x[SlotErrorInvalidWI-13]
	_ = x[SlotErrorInvalidGuardTime-12]
	_ = x[SlotErrorInvalidTCCKTS-11]
	_ = x[SlotErrorInvalidFIDI-10]
	_ = x[SlotErrorInvalidLevelParameter-8]
	_ = x[SlotErrorInvalidPowerSelect-7]
	_ = x[SlotErrorInvalidSlot-5]
	_ = x[SlotErrorInvalidLength-1]
	_ = x[SlotErrorCommandNotSupported-0]
}

const (
	_SlotError_name_0 = "SlotErrorCommandNotSupportedSlotErrorInvalidLength"
	_SlotError_name_1 = "SlotErrorInvalidSlot"
	_SlotError_name_2 = "SlotErrorInvalidPowerSelectSlotErrorInvalidLevelParameter"
	_SlotError_name_3 = "SlotErrorInvalidFIDISlotErrorInvalidTCCKTSSlotErrorInvalidGuardTimeSlotErrorInvalidWISlotErrorInvalidClockStopSlotErrorInvalidIFSCSlotErrorInvalidNAD"
	_SlotError_name_4 = "SlotErrorSlotBusy"
	_SlotError_name_5 = "SlotErrorBusyWithAutoSequenceSlotErrorDeactivatedProtocolSlotErrorProcedureByteConflictSlotErrorClassNotSupportedSlotErrorProtocolNotSupportedSlotErrorBadATRTCKSlotErrorBadATRTS"
	_SlotError_name_6 = "SlotErrorHardwareSlotErrorOverrunSlotErrorParitySlotErrorTimeoutSlotErrorCommandAborted"
)

var (
	_SlotError_index_0 = [...]uint8{0, 28, 50}
	_SlotError_index_2 = [...]uint8{0, 27, 57}
	_SlotError_index_3 = [...]uint8{0, 20, 42, 67, 85, 110, 130, 149}
	_SlotError_index_5 = [...]uint8{0, 29, 57, 87, 113, 142, 160, 177}
	_SlotError_index_6 = [...]uint8{0, 17, 33, 48, 64, 87}
)

func (i SlotError) String() string {
	switch {
	case i <= 1:
		return _SlotError_name_0[_SlotError_index_0[i]:_SlotError_index_0[i+1]]
	case i == 5:
		return _SlotError_name_1
	case 7 <= i && i <= 8:
		i -= 7
		return _SlotError_name_2[_SlotError_index_2[i]:_SlotError_index_2[i+1]]
	case 10 <= i && i <= 16:
		i -= 10
		return _SlotError_name_3[_SlotError_index_3[i]:_SlotError_index_3[i+1]]
	case i == 224:
		return _SlotError_name_4
	case 242 <= i && i <= 248:
		i -= 242
		return _SlotError_name_5[_SlotError_index_5[i]:_SlotError_index_5[i+1]]
	case 251 <= i && i <= 255:
		i -= 251
		return _SlotError_name_6[_SlotError_index_6[i]:_SlotError_index_6[i+1]]
	default:
		return "SlotError(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ICCStatusRunning-0]
	_ = x[ICCStatusInactive-1]
	_ = x[ICCStatusAbsent-2]
}

const _ICCStatus_name = "ICCStatusRunningICCStatusInactiveICCStatusAbsent"

var _ICCStatus_index = [...]uint8{0, 16, 33, 48}

func (i ICCStatus) String() string {
	if i >= ICCStatus(len(_ICCStatus_index)-1) {
		return "ICCStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ICCStatus_name[_ICCStatus_index[i]:_ICCStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ClockStatusRunning-0]
	_ = x[ClockStatusStoppedL-1]
	_ = x[ClockStatusStoppedH-2]
	_ = x[ClockStatusStoppedUnknown-3]
}

const _ClockStatus_name = "ClockStatusRunningClockStatusStoppedLClockStatusStoppedHClockStatusStoppedUnknown"

var _ClockStatus_index = [...]uint8{0, 18, 37, 56, 81}

func (i ClockStatus) String() string {
	if i >= ClockStatus(len(_ClockStatus_index)-1) {
		return "ClockStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ClockStatus_name[_ClockStatus_index[i]:_ClockStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ErrorCodeChecksum-1]
	_ = x[ErrorCodeTimeout-2]
	_ = x[ErrorCodeCommand-3]
	_ = x[ErrorCodeUnauthorized-4]
	_ = x[ErrorCodeUndefined-5]
	_ = x[ErrorCodeReceiveData-6]
	_ = x[ErrorCodeReceiveDataLength-7]
}

const _ErrorCode_name = "ErrorCodeChecksumErrorCodeTimeoutErrorCodeCommandErrorCodeUnauthorizedErrorCodeUndefinedErrorCodeReceiveDataErrorCodeReceiveDataLength"

var _ErrorCode_index = [...]uint8{0, 17, 33, 49, 70, 88, 108, 134}

func (i ErrorCode) String() string {
	i -= 1
	if i >= ErrorCode(len(_ErrorCode_index)-1) {
		return "ErrorCode(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ErrorCode_name[_ErrorCode_index[i]:_ErrorCode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PowerSelectAutomatic-0]
	_ = x[PowerSelect5v-1]
	_ = x[PowerSelect3v-2]
}

const _PowerSelect_name = "PowerSelectAutomaticPowerSelect5vPowerSelect3v"

var _PowerSelect_index = [...]uint8{0, 20, 33, 46}

func (i PowerSelect) String() string {
	if i >= PowerSelect(len(_PowerSelect_index)-1) {
		return "PowerSelect(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PowerSelect_name[_PowerSelect_index[i]:_PowerSelect_index[i+1]]
}
